// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderSchema util should match array-of-objects.json 1`] = `
Array [
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 0,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "path": Array [],
      "patternProperties": undefined,
      "properties": Object {
        "propertyIsArrayOfObjects": Object {
          "items": Object {
            "properties": Object {
              "ArrayObjectProperty": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
          "type": Array [
            "array",
          ],
        },
      },
      "type": "object",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "additionalItems": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "items": undefined,
      "name": "propertyIsArrayOfObjects",
      "path": Array [
        "properties",
        "propertyIsArrayOfObjects",
      ],
      "required": false,
      "subtype": "object",
      "type": Array [
        "array",
      ],
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 3,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "ArrayObjectProperty",
      "path": Array [
        "properties",
        "propertyIsArrayOfObjects",
        "items",
        "ArrayObjectProperty",
      ],
      "required": false,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
]
`;

exports[`renderSchema util should match array-of-refs.json 1`] = `
Array [
  Object {
    "id": "random-id",
    "level": 0,
    "metadata": Object {
      "additionalItems": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "items": undefined,
      "path": Array [],
      "subtype": "$ref( ./models/todo-full.json )",
      "type": "array",
      "validations": Object {},
    },
    "name": "",
  },
]
`;

exports[`renderSchema util should match combiner-schema.json 1`] = `
Array [
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 0,
    "metadata": Object {
      "annotations": Object {
        "title": "Todo Full",
      },
      "combiner": "allOf",
      "id": "random-id",
      "path": Array [],
      "properties": Array [
        Object {
          "properties": Object {
            "test": Object {
              "type": "string",
            },
          },
          "type": "object",
        },
        Object {
          "properties": Object {
            "completed_at": Object {
              "format": "date-time",
              "type": Array [
                "string",
                "null",
              ],
            },
            "created_at": Object {
              "format": "date-time",
              "type": "string",
            },
            "id": Object {
              "maximum": 1000000,
              "minimum": 0,
              "type": "integer",
            },
            "updated_at": Object {
              "format": "date-time",
              "type": "string",
            },
          },
          "required": Array [
            "id",
          ],
          "type": "object",
        },
      ],
      "type": "object",
    },
    "name": "",
  },
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "path": Array [
        "properties",
        0,
      ],
      "patternProperties": undefined,
      "properties": Object {
        "test": Object {
          "type": "string",
        },
      },
      "type": "object",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "test",
      "path": Array [
        "properties",
        0,
        "properties",
        "test",
      ],
      "required": false,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {},
      "divider": "and",
      "enum": undefined,
      "id": "random-id",
      "path": Array [
        "properties",
        1,
      ],
      "patternProperties": undefined,
      "properties": Object {
        "completed_at": Object {
          "format": "date-time",
          "type": Array [
            "string",
            "null",
          ],
        },
        "created_at": Object {
          "format": "date-time",
          "type": "string",
        },
        "id": Object {
          "maximum": 1000000,
          "minimum": 0,
          "type": "integer",
        },
        "updated_at": Object {
          "format": "date-time",
          "type": "string",
        },
      },
      "type": "object",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "id",
      "path": Array [
        "properties",
        1,
        "properties",
        "id",
      ],
      "required": true,
      "type": "integer",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "completed_at",
      "path": Array [
        "properties",
        1,
        "properties",
        "completed_at",
      ],
      "required": false,
      "type": Array [
        "string",
        "null",
      ],
      "validations": Object {
        "format": "date-time",
      },
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "created_at",
      "path": Array [
        "properties",
        1,
        "properties",
        "created_at",
      ],
      "required": false,
      "type": "string",
      "validations": Object {
        "format": "date-time",
      },
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "updated_at",
      "path": Array [
        "properties",
        1,
        "properties",
        "updated_at",
      ],
      "required": false,
      "type": "string",
      "validations": Object {
        "format": "date-time",
      },
    },
    "name": "",
  },
]
`;

exports[`renderSchema util should match default-schema.json 1`] = `
Array [
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 0,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {
        "title": "User",
      },
      "enum": undefined,
      "id": "random-id",
      "path": Array [],
      "patternProperties": Object {
        "^id_": Object {
          "type": "number",
        },
        "_name$": Object {
          "type": "string",
        },
        "foo": Object {
          "type": "integer",
        },
      },
      "properties": Object {
        "age": Object {
          "maximum": 150,
          "minimum": 0,
          "type": "number",
        },
        "completed_at": Object {
          "format": "date-time",
          "type": "string",
        },
        "email": Object {
          "format": "email",
          "minLength": 2,
          "type": "string",
        },
        "items": Object {
          "items": Object {
            "type": Array [
              "string",
              "number",
            ],
          },
          "type": Array [
            "null",
            "array",
          ],
        },
        "name": Object {
          "description": "The user's full name.",
          "type": "string",
        },
        "permissions": Object {
          "properties": Object {
            "ids": Object {
              "items": Object {
                "type": "integer",
              },
              "type": "array",
            },
          },
          "type": Array [
            "string",
            "object",
          ],
        },
        "plan": Object {
          "anyOf": Array [
            Object {
              "properties": Object {
                "bar": Object {
                  "type": "string",
                },
                "foo": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "foo",
                "bar",
              ],
              "type": "object",
            },
            Object {
              "items": Object {
                "type": "integer",
              },
              "type": "array",
            },
          ],
        },
        "ref": Object {
          "$ref": "#/definitions/error-response",
        },
      },
      "type": "object",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "annotations": Object {
        "description": "The user's full name.",
      },
      "enum": undefined,
      "id": "random-id",
      "name": "name",
      "path": Array [
        "properties",
        "name",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "age",
      "path": Array [
        "properties",
        "age",
      ],
      "required": true,
      "type": "number",
      "validations": Object {
        "maximum": 150,
        "minimum": 0,
      },
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "completed_at",
      "path": Array [
        "properties",
        "completed_at",
      ],
      "required": true,
      "type": "string",
      "validations": Object {
        "format": "date-time",
      },
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "additionalItems": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "items": undefined,
      "name": "items",
      "path": Array [
        "properties",
        "items",
      ],
      "required": false,
      "subtype": Array [
        "string",
        "number",
      ],
      "type": Array [
        "null",
        "array",
      ],
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "email",
      "path": Array [
        "properties",
        "email",
      ],
      "required": false,
      "type": "string",
      "validations": Object {
        "format": "email",
        "minLength": 2,
      },
    },
    "name": "",
  },
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "annotations": Object {},
      "combiner": "anyOf",
      "id": "random-id",
      "name": "plan",
      "path": Array [
        "properties",
        "plan",
      ],
      "properties": Array [
        Object {
          "properties": Object {
            "bar": Object {
              "type": "string",
            },
            "foo": Object {
              "type": "string",
            },
          },
          "required": Array [
            "foo",
            "bar",
          ],
          "type": "object",
        },
        Object {
          "items": Object {
            "type": "integer",
          },
          "type": "array",
        },
      ],
      "required": false,
    },
    "name": "",
  },
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "path": Array [
        "properties",
        "plan",
        "properties",
        0,
      ],
      "patternProperties": undefined,
      "properties": Object {
        "bar": Object {
          "type": "string",
        },
        "foo": Object {
          "type": "string",
        },
      },
      "type": "object",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 3,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "foo",
      "path": Array [
        "properties",
        "plan",
        "properties",
        0,
        "properties",
        "foo",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 3,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "bar",
      "path": Array [
        "properties",
        "plan",
        "properties",
        0,
        "properties",
        "bar",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "additionalItems": undefined,
      "annotations": Object {},
      "divider": "and/or",
      "enum": undefined,
      "id": "random-id",
      "items": undefined,
      "path": Array [
        "properties",
        "plan",
        "properties",
        1,
      ],
      "subtype": "integer",
      "type": "array",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "permissions",
      "path": Array [
        "properties",
        "permissions",
      ],
      "patternProperties": undefined,
      "properties": Object {
        "ids": Object {
          "items": Object {
            "type": "integer",
          },
          "type": "array",
        },
      },
      "required": false,
      "type": Array [
        "string",
        "object",
      ],
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "additionalItems": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "items": undefined,
      "name": "ids",
      "path": Array [
        "properties",
        "permissions",
        "properties",
        "ids",
      ],
      "required": false,
      "subtype": "integer",
      "type": "array",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "$ref": "#/definitions/error-response",
      "id": "random-id",
      "name": "ref",
      "path": Array [
        "properties",
        "ref",
      ],
      "required": false,
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "^id_",
      "path": Array [
        "patternProperties",
        "^id_",
      ],
      "pattern": true,
      "type": "number",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "foo",
      "path": Array [
        "patternProperties",
        "foo",
      ],
      "pattern": true,
      "type": "integer",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "_name$",
      "path": Array [
        "patternProperties",
        "_name$",
      ],
      "pattern": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
]
`;

exports[`renderSchema util should match ref/original.json 1`] = `
Array [
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 0,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "path": Array [],
      "patternProperties": undefined,
      "properties": Object {
        "billing_address": Object {
          "$ref": "#/definitions/address",
        },
        "shipping_address": Object {
          "$ref": "#/definitions/address",
        },
      },
      "type": "object",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "inheritedFrom": "#/definitions/address",
      "name": "billing_address",
      "path": Array [
        "properties",
        "billing_address",
      ],
      "patternProperties": undefined,
      "properties": Object {
        "city": Object {
          "type": "string",
        },
        "state": Object {
          "type": "string",
        },
        "street_address": Object {
          "type": "string",
        },
      },
      "required": false,
      "type": "object",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "street_address",
      "path": Array [
        "properties",
        "billing_address",
        "properties",
        "street_address",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "city",
      "path": Array [
        "properties",
        "billing_address",
        "properties",
        "city",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "state",
      "path": Array [
        "properties",
        "billing_address",
        "properties",
        "state",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "canHaveChildren": true,
    "id": "random-id",
    "level": 1,
    "metadata": Object {
      "additionalProperties": undefined,
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "inheritedFrom": "#/definitions/address",
      "name": "shipping_address",
      "path": Array [
        "properties",
        "shipping_address",
      ],
      "patternProperties": undefined,
      "properties": Object {
        "city": Object {
          "type": "string",
        },
        "state": Object {
          "type": "string",
        },
        "street_address": Object {
          "type": "string",
        },
      },
      "required": false,
      "type": "object",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "street_address",
      "path": Array [
        "properties",
        "shipping_address",
        "properties",
        "street_address",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "city",
      "path": Array [
        "properties",
        "shipping_address",
        "properties",
        "city",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
  Object {
    "id": "random-id",
    "level": 2,
    "metadata": Object {
      "annotations": Object {},
      "enum": undefined,
      "id": "random-id",
      "name": "state",
      "path": Array [
        "properties",
        "shipping_address",
        "properties",
        "state",
      ],
      "required": true,
      "type": "string",
      "validations": Object {},
    },
    "name": "",
  },
]
`;
